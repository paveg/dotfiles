name: Chezmoi Tests

on:
  push:
    branches: [chezmoi-migration]
  pull_request:
    branches: [main]

jobs:
  test-chezmoi:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Personal environment tests
          - os: macos-latest
            business_use: false
          - os: macos-13  
            business_use: false
          - os: ubuntu-latest
            business_use: false
          - os: ubuntu-22.04
            business_use: false
          # Business environment tests  
          - os: macos-latest
            business_use: true
          - os: ubuntu-latest
            business_use: true
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install chezmoi
      run: |
        sh -c "$(curl -fsLS get.chezmoi.io)" -- -b "$HOME/.local/bin"
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Test chezmoi configuration
      run: |
        echo "=== Testing chezmoi on ${{ matrix.os }} ==="
        
        # Set up chezmoi source directory
        mkdir -p ~/.local/share/chezmoi
        cp -r . ~/.local/share/chezmoi/
        
        # Initialize chezmoi
        chezmoi init
        
        # Test template rendering
        echo "Testing template rendering..."
        chezmoi execute-template < .chezmoi.yaml.tmpl > /dev/null
        
        echo "✓ Template rendering works"
    
    - name: Test chezmoi apply
      run: |
        echo "=== Testing chezmoi apply ==="
        
        # Test actual apply to temporary directory
        export TEST_HOME="$GITHUB_WORKSPACE/test_home"
        mkdir -p "$TEST_HOME"
        
        # Skip package installation in CI for faster tests
        export CI_SKIP_PACKAGES=1
        
        # Set business environment if needed
        if [[ "${{ matrix.business_use }}" == "true" ]]; then
          export BUSINESS_USE=1
          echo "Testing with BUSINESS_USE=1"
        fi
        
        # Apply to test directory
        chezmoi apply --destination="$TEST_HOME" --force
        
        echo "✓ Chezmoi apply completed"
    
    - name: Verify essential files
      run: |
        echo "=== Verifying essential files ==="
        export TEST_HOME="$GITHUB_WORKSPACE/test_home"
        
        # Check essential files exist
        test -f "$TEST_HOME/.zshenv" || (echo "FAIL: .zshenv not created" && exit 1)
        test -d "$TEST_HOME/.config/zsh" || (echo "FAIL: zsh config dir not created" && exit 1)
        test -f "$TEST_HOME/.config/zsh/.zshrc" || (echo "FAIL: .zshrc not created" && exit 1)
        test -f "$TEST_HOME/.config/starship.toml" || (echo "FAIL: starship config not created" && exit 1)
        
        echo "✓ All essential files created"
    
    - name: Test zsh syntax
      run: |
        echo "=== Testing zsh syntax ==="
        export TEST_HOME="$GITHUB_WORKSPACE/test_home"
        
        # Install zsh for syntax checking
        if [[ "${{ matrix.os }}" =~ ^ubuntu- ]]; then
          sudo apt-get update -qq && sudo apt-get install -y zsh
        elif [[ "${{ matrix.os }}" =~ ^macos- ]]; then
          # macOS has zsh by default
          true
        fi
        
        # Test syntax of generated files
        zsh -n "$TEST_HOME/.zshenv" || (echo "FAIL: .zshenv syntax error" && exit 1)
        zsh -n "$TEST_HOME/.config/zsh/.zshrc" || (echo "FAIL: .zshrc syntax error" && exit 1)
        
        echo "✓ Syntax validation passed"
    
    - name: Test actual zsh loading
      run: |
        echo "=== Testing actual zsh loading ==="
        export TEST_HOME="$GITHUB_WORKSPACE/test_home"
        
        # Set required environment for zsh loading
        export HOME="$TEST_HOME"
        export ZDOTDIR="$TEST_HOME/.config/zsh"
        
        # Test that zsh can load without errors (non-interactive)
        timeout 30 zsh -c 'echo "Zsh loaded successfully"' || (echo "FAIL: Zsh loading failed" && exit 1)
        
        echo "✓ Zsh loading test passed"
    
    - name: Test business environment
      if: matrix.business_use == true
      run: |
        echo "=== Testing business environment specifics ==="
        export TEST_HOME="$GITHUB_WORKSPACE/test_home"
        
        # Check business-specific environment variable is set
        grep -q "BUSINESS_USE=1" "$TEST_HOME/.zshenv" || (echo "FAIL: BUSINESS_USE not set in .zshenv" && exit 1)
        
        echo "✓ Business environment verified"
    
    - name: Test OS-specific content
      run: |
        echo "=== Testing OS-specific content ==="
        export TEST_HOME="$GITHUB_WORKSPACE/test_home"
        
        if [[ "${{ matrix.os }}" =~ ^macos- ]]; then
          # macOS specific checks (both latest and 13)
          grep -q "HOMEBREW_PREFIX" "$TEST_HOME/.zshenv" || (echo "FAIL: macOS Homebrew config missing" && exit 1)
          echo "✓ macOS-specific content verified on ${{ matrix.os }}"
        elif [[ "${{ matrix.os }}" =~ ^ubuntu- ]]; then
          # Linux specific checks - should work on both Ubuntu versions
          echo "✓ Linux-specific content verified on ${{ matrix.os }}"
        fi